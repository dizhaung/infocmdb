os: linux
language: shell

services:
  - docker

addons:
  apt:
    packages:
      - docker-ce

git:
  depth: false
  quiet: true

env:
  global:
    - DOCKER_COMPOSE_VERSION=1.24.1
    - BUILD_NPROC=8
    - BUILD_PERLPROC=20
    - COMPOSE_ENV=test
    - COMPOSE_HTTP_TIMEOUT=120
    - COMPOSE_INTERACTIVE_NO_CLI=1
    - DOCKER_WEB_HOSTNAME=infocmdb.local
    - IMAGE_TAG=ci

before_install:
  - git fetch --all --tags
  - echo "install specific docker-compose Version '${DOCKER_COMPOSE_VERSION}'."
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - docker version
  - docker-compose version

jobs:
  fast_finish: true
  allow_failures:
    - env: COMPOSE_ENV_PHP_VERSION=7
  include:
    - stage: "testing"
      name: "PHP 7.3 Version"
      env: COMPOSE_ENV_PHP_VERSION=7.3
    - name: "PHP 7.1 Version"
      env: COMPOSE_ENV_PHP_VERSION=7.1
    - name: "PHP 7 latest Version"
      env: COMPOSE_ENV_PHP_VERSION=7

    - stage: "publish image"
      if: tag IS present AND branch = "master"
      env:
        - COMPOSE_ENV_PHP_VERSION=7.3
        - COMPOSE_ENV=prod
        - IMAGE_TAG=release
      script:
        - set -e
        - git describe --tags --long --always > version_info.txt
        - echo -n "Cmdb Version "
        - cat version_info.txt
        - ./run setup
        - ./run build
        - ./deploy/publish_docker_images.sh ${IMAGE_TAG}

#cache:
#  timeout: 86400
#  directories:
#    - .cache_perl

script:
  - set -e
  - ./run setup
  - ./run build
#  - mkdir -p /tmp/.cache_perl/usr/local/lib/x86_64-linux-gnu/perl
#  - docker-compose run --rm -v "$(PWD)/.cache_perl:/cache_perl" --entrypoint "cp -ur /usr/local/lib/x86_64-linux-gnu/perl /cache_perl/usr/local/lib/x86_64-linux-gnu/perl" php
#  - mkdir -p /tmp/.cache_perl/usr/local/share/perl
#  - docker-compose run --rm -v "$(PWD)/.cache_perl:/cache_perl" --entrypoint "cp -ur /usr/local/share/perl /cache_perl/usr/local/share/perl" php
  - ./run up
  - ./run execute_tests unit --steps
  - ./run execute_tests api --steps
  - ./run execute_tests apiV2 --steps
  - ./run execute_tests functional --steps
  - ./run execute_tests acceptance --steps
  - docker-compose logs

after_script:
  - docker images

before_deploy:
  - mkdir -p /tmp/releases
  - tar -xzf /tmp/releases/infocmdb_source.tar.gz .

deploy:
  - provider: releases
    github_token: ${GITHUB_TOKEN}
    file:
      - "/tmp/releases/infocmdb_source.tar.gz"
    cleanup: true
    on:
      tags: true
      branch: master

#  - provider: pages
#    skip_cleanup: true
#    local_dir: docs
#    github_token: $GITHUB_TOKEN
#    on:
#      branch: master
#      condition: -n "${HUGO_VERSION}"

# vim:set et ts=2 sw=2:
